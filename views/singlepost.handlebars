<div class="col align-center mb-5">
    <h2>Post</h2>
    <section class="card blogpost" id="{{id}}">
        <header style="display:flex; justify-content: space-between; background-color:yellow">
            <h5>Blog Post Id: {{blog.id}}</h5>
            <h4>{{blog.title}}</h4>
            <h6>posted by {{blog.user.name}}<span> on </span>{{format_date user.createdAt}}</h6>
        </header>
        <div class="card-body">
            {{blog.content}}
        </div>
        {{#if ( if_Eq blog.user.id logininfo.usid)}}
        <div id="postbutts" style="display: flex;">
            <button class="btn" style=" color:white; margin: 5px; background-color:green" id="EditPost" onclick="revealeditpost()">Edit</button>
            <button class="btn" style="color:white;margin: 5px; background-color:red" onclick="BlogDeleteIt({{blog.id}})">Delete</button>
        </div>
        {{/if}}
    </section>


    <section id="EditPosts" style="display: none;">
        <div id="commentinput" class="col-md-8">
            <div style="display:flex; flex-flow: row wrap; ">
                <h5 style: 'margin: 0 10px 0 0'>Comment Title: </h5>
                <textarea name="title" id="newPostTitle" cols="30" rows="1">{{blog.title}}</textarea>
            </div>
            <div style="display:flex; flex-flow: row wrap; ">
                <h5 style: 'margin: 0 10px 0 0'>Comment Content : </h5>
                <textarea rows="4" cols="50" id="newPostContent" name="content" form="blogposting">{{blog.content}}</textarea>
                <button id="submitComment" onclick='submitEditPost({{blog.id}})'>SubmitUpdate</button>
            </div>
        </div>
    </section>

    <h2>Comments to Post</h2>
    {{#each blog.comments as |comment|}}
    {{>comment-details logininfo=../logininfo}}
    {{/each}}

    <h4> Enter New Comment to Blog Post Id: {{blog.id}}</h4>
    <div id="butts" style="display: flex; ">
        <button class="btn" style="margin: 10px; color:white" onclick="newcomm()">NewComment</button>
    </div>

    <section id="NewComment" style="display: none;">
        <div id="commentinput" class="col-md-8">
            <div style="display:flex; flex-flow: row wrap; ">
                <h5 style: 'margin: 0 10px 0 0'>Comment Title: </h5>
                <textarea name="title" id="newtitle" cols="30" rows="1"></textarea>
            </div>
            <div style="display:flex; flex-flow: row wrap; ">
                <h5 style: 'margin: 0 10px 0 0'>Comment Content : </h5>
                <textarea rows="4" cols="50" id="newcontent" name="content" form="blogposting"></textarea>
                <div style="display: none;">
                <textarea name="PostRef" id="newPostRef" cols="30" rows="1">{{blog.id}}</textarea>
                <textarea name="commentor" id="newcommentor" cols="30" rows="1">{{logininfo.id}}</textarea>
                </div>
                <button id="submitComment" onclick='subComment()'>SubmitComment</button>
            </div>
        </div>
    </section>



    <script>
        function newcomm() {
            document.getElementById('NewComment').style.display = "block";
            document.getElementById('butts').style.display = "none";
        };

        function revealeditpost() {
            document.getElementById('EditPosts').style.display = "block";
            document.getElementById('postbutts').style.display = "none";
            document.getElementById('butts').style.display = "none";
        };


        async function BlogDeleteIt(pkid) {
            try {
                const response = await fetch(`/api/blogposts/${pkid}`, { method: 'DELETE' });
                if (response.ok) {
                    console.log(`/api/blogposts/${pkid}`)
                    document.location.replace('/');
                }
            }
            catch (err) { res.status(500).json({ message: 'Not deleted, not found' }) }
        }

        async function subComment() {
            const title = document.querySelector('#newtitle').value.trim();
            const content = document.querySelector('#newcontent').value.trim();
            const commentor = document.querySelector('#newcommentor').value.trim();
            const PostRef = document.querySelector('#newPostRef').value.trim();

            if (content && title) {
                const response = await fetch('/api/comments', {
                    method: 'POST',
                    body: JSON.stringify({ title, content, commentor, PostRef }),
                    headers: { 'Content-Type': 'application/json' },
                });

                if (response.ok) {
                    document.location.replace('/');
                } else {
                    alert('Failed to post comment.');
                }
            }
        };
        async function submitEditPost(pkid) {
            const title = document.querySelector('#newPostTitle').value.trim();
            const content = document.querySelector('#newPostContent').value.trim();


            if (content && title) {
                const response = await fetch(`/api/blogposts/${pkid}`, {
                    method: 'PUT',
                    body: JSON.stringify({ title, content}),
                    headers: { 'Content-Type': 'application/json' },
                });

                if (response.ok) {
                    document.location.replace('/');
                } else {
                    alert('Failed to post comment.');
                }
            }
        };
    </script>
</div>